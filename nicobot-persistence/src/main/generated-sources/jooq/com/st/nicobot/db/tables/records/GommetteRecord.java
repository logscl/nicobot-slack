/*
 * This file is generated by jOOQ.
*/
package com.st.nicobot.db.tables.records;


import com.st.nicobot.db.tables.Gommette;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GommetteRecord extends TableRecordImpl<GommetteRecord> implements Record9<String, String, String, Integer, Integer, Integer, Integer, Timestamp, Boolean> {

    private static final long serialVersionUID = -1809370236;

    /**
     * Setter for <code>PUBLIC.GOMMETTE.USER_ID</code>.
     */
    public void setUserId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.GOMMETTE.USER_ID</code>.
     */
    public String getUserId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>PUBLIC.GOMMETTE.GIVER_ID</code>.
     */
    public void setGiverId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.GOMMETTE.GIVER_ID</code>.
     */
    public String getGiverId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>PUBLIC.GOMMETTE.REASON</code>.
     */
    public void setReason(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.GOMMETTE.REASON</code>.
     */
    public String getReason() {
        return (String) get(2);
    }

    /**
     * Setter for <code>PUBLIC.GOMMETTE.TYPE</code>.
     */
    public void setType(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>PUBLIC.GOMMETTE.TYPE</code>.
     */
    public Integer getType() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>PUBLIC.GOMMETTE.YES_COUNT</code>.
     */
    public void setYesCount(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>PUBLIC.GOMMETTE.YES_COUNT</code>.
     */
    public Integer getYesCount() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>PUBLIC.GOMMETTE.NO_COUNT</code>.
     */
    public void setNoCount(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>PUBLIC.GOMMETTE.NO_COUNT</code>.
     */
    public Integer getNoCount() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>PUBLIC.GOMMETTE.COEFFICIENT</code>.
     */
    public void setCoefficient(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>PUBLIC.GOMMETTE.COEFFICIENT</code>.
     */
    public Integer getCoefficient() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>PUBLIC.GOMMETTE.DATE</code>.
     */
    public void setDate(Timestamp value) {
        set(7, value);
    }

    /**
     * Getter for <code>PUBLIC.GOMMETTE.DATE</code>.
     */
    public Timestamp getDate() {
        return (Timestamp) get(7);
    }

    /**
     * Setter for <code>PUBLIC.GOMMETTE.VALID</code>.
     */
    public void setValid(Boolean value) {
        set(8, value);
    }

    /**
     * Getter for <code>PUBLIC.GOMMETTE.VALID</code>.
     */
    public Boolean getValid() {
        return (Boolean) get(8);
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<String, String, String, Integer, Integer, Integer, Integer, Timestamp, Boolean> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<String, String, String, Integer, Integer, Integer, Integer, Timestamp, Boolean> valuesRow() {
        return (Row9) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Gommette.GOMMETTE.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Gommette.GOMMETTE.GIVER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Gommette.GOMMETTE.REASON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Gommette.GOMMETTE.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return Gommette.GOMMETTE.YES_COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return Gommette.GOMMETTE.NO_COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field7() {
        return Gommette.GOMMETTE.COEFFICIENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field8() {
        return Gommette.GOMMETTE.DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field9() {
        return Gommette.GOMMETTE.VALID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getGiverId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getReason();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getYesCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getNoCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value7() {
        return getCoefficient();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value8() {
        return getDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value9() {
        return getValid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GommetteRecord value1(String value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GommetteRecord value2(String value) {
        setGiverId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GommetteRecord value3(String value) {
        setReason(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GommetteRecord value4(Integer value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GommetteRecord value5(Integer value) {
        setYesCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GommetteRecord value6(Integer value) {
        setNoCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GommetteRecord value7(Integer value) {
        setCoefficient(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GommetteRecord value8(Timestamp value) {
        setDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GommetteRecord value9(Boolean value) {
        setValid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GommetteRecord values(String value1, String value2, String value3, Integer value4, Integer value5, Integer value6, Integer value7, Timestamp value8, Boolean value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GommetteRecord
     */
    public GommetteRecord() {
        super(Gommette.GOMMETTE);
    }

    /**
     * Create a detached, initialised GommetteRecord
     */
    public GommetteRecord(String userId, String giverId, String reason, Integer type, Integer yesCount, Integer noCount, Integer coefficient, Timestamp date, Boolean valid) {
        super(Gommette.GOMMETTE);

        set(0, userId);
        set(1, giverId);
        set(2, reason);
        set(3, type);
        set(4, yesCount);
        set(5, noCount);
        set(6, coefficient);
        set(7, date);
        set(8, valid);
    }
}
