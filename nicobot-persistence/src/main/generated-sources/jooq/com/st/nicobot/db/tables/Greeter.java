/*
 * This file is generated by jOOQ.
*/
package com.st.nicobot.db.tables;


import com.st.nicobot.db.Public;
import com.st.nicobot.db.tables.records.GreeterRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Greeter extends TableImpl<GreeterRecord> {

    private static final long serialVersionUID = 243256437;

    /**
     * The reference instance of <code>PUBLIC.GREETER</code>
     */
    public static final Greeter GREETER = new Greeter();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GreeterRecord> getRecordType() {
        return GreeterRecord.class;
    }

    /**
     * The column <code>PUBLIC.GREETER.USER_ID</code>.
     */
    public final TableField<GreeterRecord, String> USER_ID = createField("USER_ID", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false), this, "");

    /**
     * The column <code>PUBLIC.GREETER.CHANNEL_ID</code>.
     */
    public final TableField<GreeterRecord, String> CHANNEL_ID = createField("CHANNEL_ID", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "");

    /**
     * The column <code>PUBLIC.GREETER.YEAR</code>.
     */
    public final TableField<GreeterRecord, Integer> YEAR = createField("YEAR", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>PUBLIC.GREETER.WEEK</code>.
     */
    public final TableField<GreeterRecord, Integer> WEEK = createField("WEEK", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>PUBLIC.GREETER</code> table reference
     */
    public Greeter() {
        this("GREETER", null);
    }

    /**
     * Create an aliased <code>PUBLIC.GREETER</code> table reference
     */
    public Greeter(String alias) {
        this(alias, GREETER);
    }

    private Greeter(String alias, Table<GreeterRecord> aliased) {
        this(alias, aliased, null);
    }

    private Greeter(String alias, Table<GreeterRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Greeter as(String alias) {
        return new Greeter(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Greeter rename(String name) {
        return new Greeter(name, null);
    }
}
