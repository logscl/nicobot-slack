/*
 * This file is generated by jOOQ.
*/
package com.st.nicobot.db.tables.records;


import com.st.nicobot.db.tables.Greeter;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GreeterRecord extends TableRecordImpl<GreeterRecord> implements Record4<String, String, Integer, Integer> {

    private static final long serialVersionUID = -920596165;

    /**
     * Setter for <code>PUBLIC.GREETER.USER_ID</code>.
     */
    public void setUserId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.GREETER.USER_ID</code>.
     */
    public String getUserId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>PUBLIC.GREETER.CHANNEL_ID</code>.
     */
    public void setChannelId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.GREETER.CHANNEL_ID</code>.
     */
    public String getChannelId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>PUBLIC.GREETER.YEAR</code>.
     */
    public void setYear(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.GREETER.YEAR</code>.
     */
    public Integer getYear() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>PUBLIC.GREETER.WEEK</code>.
     */
    public void setWeek(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>PUBLIC.GREETER.WEEK</code>.
     */
    public Integer getWeek() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, Integer, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, Integer, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Greeter.GREETER.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Greeter.GREETER.CHANNEL_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Greeter.GREETER.YEAR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Greeter.GREETER.WEEK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getChannelId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getYear();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getWeek();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GreeterRecord value1(String value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GreeterRecord value2(String value) {
        setChannelId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GreeterRecord value3(Integer value) {
        setYear(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GreeterRecord value4(Integer value) {
        setWeek(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GreeterRecord values(String value1, String value2, Integer value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GreeterRecord
     */
    public GreeterRecord() {
        super(Greeter.GREETER);
    }

    /**
     * Create a detached, initialised GreeterRecord
     */
    public GreeterRecord(String userId, String channelId, Integer year, Integer week) {
        super(Greeter.GREETER);

        set(0, userId);
        set(1, channelId);
        set(2, year);
        set(3, week);
    }
}
