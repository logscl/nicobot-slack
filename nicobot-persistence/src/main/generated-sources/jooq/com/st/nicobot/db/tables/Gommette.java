/*
 * This file is generated by jOOQ.
*/
package com.st.nicobot.db.tables;


import com.st.nicobot.db.Public;
import com.st.nicobot.db.tables.records.GommetteRecord;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Gommette extends TableImpl<GommetteRecord> {

    private static final long serialVersionUID = -1037665537;

    /**
     * The reference instance of <code>PUBLIC.GOMMETTE</code>
     */
    public static final Gommette GOMMETTE = new Gommette();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GommetteRecord> getRecordType() {
        return GommetteRecord.class;
    }

    /**
     * The column <code>PUBLIC.GOMMETTE.USER_ID</code>.
     */
    public final TableField<GommetteRecord, String> USER_ID = createField("USER_ID", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false), this, "");

    /**
     * The column <code>PUBLIC.GOMMETTE.GIVER_ID</code>.
     */
    public final TableField<GommetteRecord, String> GIVER_ID = createField("GIVER_ID", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false), this, "");

    /**
     * The column <code>PUBLIC.GOMMETTE.REASON</code>.
     */
    public final TableField<GommetteRecord, String> REASON = createField("REASON", org.jooq.impl.SQLDataType.VARCHAR.length(2000), this, "");

    /**
     * The column <code>PUBLIC.GOMMETTE.TYPE</code>.
     */
    public final TableField<GommetteRecord, Integer> TYPE = createField("TYPE", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.GOMMETTE.YES_COUNT</code>.
     */
    public final TableField<GommetteRecord, Integer> YES_COUNT = createField("YES_COUNT", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>PUBLIC.GOMMETTE.NO_COUNT</code>.
     */
    public final TableField<GommetteRecord, Integer> NO_COUNT = createField("NO_COUNT", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>PUBLIC.GOMMETTE.COEFFICIENT</code>.
     */
    public final TableField<GommetteRecord, Integer> COEFFICIENT = createField("COEFFICIENT", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("1", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>PUBLIC.GOMMETTE.DATE</code>.
     */
    public final TableField<GommetteRecord, Timestamp> DATE = createField("DATE", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.GOMMETTE.VALID</code>.
     */
    public final TableField<GommetteRecord, Boolean> VALID = createField("VALID", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * Create a <code>PUBLIC.GOMMETTE</code> table reference
     */
    public Gommette() {
        this("GOMMETTE", null);
    }

    /**
     * Create an aliased <code>PUBLIC.GOMMETTE</code> table reference
     */
    public Gommette(String alias) {
        this(alias, GOMMETTE);
    }

    private Gommette(String alias, Table<GommetteRecord> aliased) {
        this(alias, aliased, null);
    }

    private Gommette(String alias, Table<GommetteRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Gommette as(String alias) {
        return new Gommette(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Gommette rename(String name) {
        return new Gommette(name, null);
    }
}
